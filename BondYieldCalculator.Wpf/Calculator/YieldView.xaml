<UserControl x:Class="BondYieldCalculator.Wpf.Calculator.YieldView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BondYieldCalculator.Wpf.Calculator"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dataSources="clr-namespace:BondYieldCalculator.Wpf.DataSources"
             xmlns:wpf="clr-namespace:BondYieldCalculator.Wpf"
             mc:Ignorable="d" Height="371" Width="400"
             d:DesignHeight="300" d:DesignWidth="300"
             wpf:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{Binding YieldVM, Source={StaticResource DS}}">

    <UserControl.Resources>
        <dataSources:DesignModeDataSource x:Key="DS" />
        <local:PriceYieldConverter x:Key="PC" />
    </UserControl.Resources>

    <Grid OpacityMask="Black" Margin="10,0,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="9*"/>
            <ColumnDefinition Width="17*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Margin="0,10,0,0" TextWrapping="Wrap" Text="{Binding Name}" FontSize="36" TextAlignment="Center" Grid.ColumnSpan="2"/>

        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" FontSize="24" Grid.Row="1" Grid.Column="0"  ><Run Text="Coupon: "/></TextBlock>
        <mah:NumericUpDown Interval="0.05" NumericInputMode="Decimal" Minimum="0.0001" Maximum="0.9999" Name="Coupon"
                Value="{Binding Coupon, Mode=TwoWay}" Margin="6,6,0,6" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Width="95"/>

        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" OpacityMask="#FF9C1339" FontSize="24" Grid.Row="2"><Run Text="Years: "/></TextBlock>
        <mah:NumericUpDown Interval="1" Minimum="1"
                           Value="{Binding Years, Mode=TwoWay}" Margin="6,6,0,6" Grid.Row="2" Grid.Column="1" Name="Years" HorizontalAlignment="Left" Width="95" 
                           d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>

        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" OpacityMask="#FF9C1339" FontSize="24" Grid.Row="3"><Run Text="Face Value: "/></TextBlock>
        <mah:NumericUpDown Interval="1000" NumericInputMode="Decimal" Minimum="1000" Maximum="100000000" 
                Value="{Binding FaceValue, Mode=TwoWay}" Margin="6,6,100,6" Grid.Row="3" Grid.Column="1" Name="FaceValue"/>

        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" OpacityMask="#FF9C1339" FontSize="24" Grid.Row="4"><Run Text="Price:"/></TextBlock>
        <mah:NumericUpDown Interval="500" NumericInputMode="Decimal" Minimum="5"
                Value="{Binding Price, Mode=TwoWay}" Margin="6,6,100,6"  Grid.Row="4" Grid.Column="1" Name="Rate"/>

        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" OpacityMask="#FF9C1339" FontSize="24" Grid.Row="5"><Run Text="Yield:"/></TextBlock>
        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" Text="{Binding Yield, Converter={StaticResource PC}}" Grid.Row="5" Grid.Column="1" FontSize="24">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding = "{Binding ShouldShowYield, UpdateSourceTrigger=PropertyChanged}" Value = "True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" OpacityMask="#FF9C1339" FontSize="24" Grid.Row="6" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"><Run Text="Time(secs):"/></TextBlock>
        <TextBlock Margin="6,0,0,0" TextWrapping="Wrap" Text="{Binding ElapsedTime}" Grid.Row="6" Grid.Column="1" FontSize="24" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding = "{Binding ShouldShowYield, UpdateSourceTrigger=PropertyChanged}" Value = "True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Button Grid.Row="7" Content="Calculate" Width="100" Height="40" Grid.ColumnSpan="2"
                      Command="{Binding CalculateCommand}" HorizontalAlignment="Center" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding = "{Binding ShouldShowYield, UpdateSourceTrigger=PropertyChanged}" Value = "True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Coupon}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Years}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=FaceValue}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Rate}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--Style="{DynamicResource MetroFlatButton}"-->

        <Button Grid.Row="7" Content="Clear" Width="100" Height="40" Grid.ColumnSpan="2"
                      Command="{Binding ClearCommand}" HorizontalAlignment="Center" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding = "{Binding ShouldShowYield, UpdateSourceTrigger=PropertyChanged}" Value = "True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
